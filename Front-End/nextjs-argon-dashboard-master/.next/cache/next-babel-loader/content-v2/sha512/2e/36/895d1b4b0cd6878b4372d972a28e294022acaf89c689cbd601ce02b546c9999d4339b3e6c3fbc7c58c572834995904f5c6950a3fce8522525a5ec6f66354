{"ast":null,"code":"import { AppConfig, UserSession, showConnect } from '@stacks/connect';\nimport { Storage } from '@stacks/storage';\nimport { StacksMainnet, StacksTestnet } from '@stacks/network';\nconst appConfig = new AppConfig(['store_write', 'publish_data']); // Set this to true if you want to use Mainnet\n\nconst boolNetworkType = false;\nexport const userSession = new UserSession({\n  appConfig\n});\nexport const storage = new Storage({\n  userSession\n});\nexport function networkType() {\n  if (boolNetworkType) return new StacksMainnet();else return new StacksTestnet();\n}\nexport function myStxAddress() {\n  if (boolNetworkType) return getUserData().profile.stxAddress.mainnet;else return getUserData().profile.stxAddress.testnet;\n}\nexport function authenticate() {\n  showConnect({\n    appDetails: {\n      name: 'Amortize',\n      icon: window.location.origin + '/assets/img/brand/Amortize_Logo1.png'\n    },\n    redirectTo: '/',\n    onFinish: () => {// Get Access rights from smart contract\n    },\n    userSession: userSession\n  });\n}\nexport function getUserData() {\n  return userSession.loadUserData();\n}","map":{"version":3,"sources":["C:/Users/DELL/Desktop/nextjs-argon-dashboard-master/components/auth.js"],"names":["AppConfig","UserSession","showConnect","Storage","StacksMainnet","StacksTestnet","appConfig","boolNetworkType","userSession","storage","networkType","myStxAddress","getUserData","profile","stxAddress","mainnet","testnet","authenticate","appDetails","name","icon","window","location","origin","redirectTo","onFinish","loadUserData"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,iBAApD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iBAA7C;AAEA,MAAMC,SAAS,GAAG,IAAIN,SAAJ,CAAc,CAAC,aAAD,EAAgB,cAAhB,CAAd,CAAlB,C,CAEA;;AACA,MAAMO,eAAe,GAAG,KAAxB;AAEA,OAAO,MAAMC,WAAW,GAAG,IAAIP,WAAJ,CAAgB;AAAEK,EAAAA;AAAF,CAAhB,CAApB;AACP,OAAO,MAAMG,OAAO,GAAG,IAAIN,OAAJ,CAAY;AAAEK,EAAAA;AAAF,CAAZ,CAAhB;AAEP,OAAO,SAASE,WAAT,GAAuB;AAC5B,MAAGH,eAAH,EACE,OAAO,IAAIH,aAAJ,EAAP,CADF,KAGE,OAAO,IAAIC,aAAJ,EAAP;AACH;AAED,OAAO,SAASM,YAAT,GAAwB;AAC7B,MAAGJ,eAAH,EACE,OAAOK,WAAW,GAAGC,OAAd,CAAsBC,UAAtB,CAAiCC,OAAxC,CADF,KAGE,OAAOH,WAAW,GAAGC,OAAd,CAAsBC,UAAtB,CAAiCE,OAAxC;AACH;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7Bf,EAAAA,WAAW,CAAC;AACVgB,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,UADI;AAEVC,MAAAA,IAAI,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB;AAFrB,KADF;AAKVC,IAAAA,UAAU,EAAE,GALF;AAMVC,IAAAA,QAAQ,EAAE,MAAM,CACd;AAED,KATS;AAUVjB,IAAAA,WAAW,EAAEA;AAVH,GAAD,CAAX;AAYD;AAED,OAAO,SAASI,WAAT,GAAuB;AAC5B,SAAOJ,WAAW,CAACkB,YAAZ,EAAP;AACD","sourcesContent":["import { AppConfig, UserSession, showConnect } from '@stacks/connect';\r\nimport { Storage } from '@stacks/storage';\r\nimport { StacksMainnet, StacksTestnet } from '@stacks/network';\r\n\r\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\r\n\r\n// Set this to true if you want to use Mainnet\r\nconst boolNetworkType = false; \r\n\r\nexport const userSession = new UserSession({ appConfig });\r\nexport const storage = new Storage({ userSession });\r\n\r\nexport function networkType() {\r\n  if(boolNetworkType)\r\n    return new StacksMainnet();\r\n  else \r\n    return new StacksTestnet();\r\n}\r\n\r\nexport function myStxAddress() {\r\n  if(boolNetworkType)\r\n    return getUserData().profile.stxAddress.mainnet;\r\n  else \r\n    return getUserData().profile.stxAddress.testnet;\r\n}\r\n\r\nexport function authenticate() {\r\n  showConnect({\r\n    appDetails: {\r\n      name: 'Amortize',\r\n      icon: window.location.origin + '/assets/img/brand/Amortize_Logo1.png',\r\n    },\r\n    redirectTo: '/',\r\n    onFinish: () => {\r\n      // Get Access rights from smart contract\r\n     \r\n    },\r\n    userSession: userSession,\r\n  });\r\n}\r\n\r\nexport function getUserData() {\r\n  return userSession.loadUserData();\r\n}"]},"metadata":{},"sourceType":"module"}